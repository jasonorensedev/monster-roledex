{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","image","monster","id","className","alt","src","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","searchTestArrowFunction","e","setState","searchMonster","target","value","state","searchTest","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAgBeA,MAbf,SAAcC,GAEV,IAAMC,EAAK,+BAA2BD,EAAME,QAAQC,GAAzC,qBAEX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAKL,IACxB,6BAAKD,EAAME,QAAQK,OACnB,4BAAIP,EAAME,QAAQM,YCIfC,MAVf,SAAkBT,GACd,OACI,qBAAKI,UAAU,YAAf,SACKJ,EAAMU,SAASC,KAAI,SAAAT,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNrBS,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAClB,8BACI,uBAAOC,KAAK,SACRX,UAAU,SACVS,YAAaA,EACbG,SAAUF,QCqDPG,E,kDAvDb,aAAe,IAAD,8BACZ,gBAqBFC,wBAA0B,SAACC,GACzB,EAAKC,SAAS,CAACC,cAAeF,EAAEG,OAAOC,SArBvC,EAAKC,MAAQ,CACXd,SAAU,GACVW,cAAe,IAGjB,EAAKI,WAAa,EAAKA,WAAWC,KAAhB,gBAPN,E,qDAWd,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEV,SAAUqB,S,wBAG7C,SAAWZ,GACTa,KAAKZ,SAAS,CAACC,cAAeF,EAAEG,OAAOC,U,oBAOzC,WAAU,IAAD,SAK6BS,KAAKR,MAAjCd,EALD,EAKCA,SAAUW,EALX,EAKWA,cACZY,EAAmBvB,EACtBwB,QAAO,SAAAhC,GAAO,OAAIA,EAAQK,KACxB4B,cACAC,SAASf,EACLc,kBAMT,OACE,sBAAK/B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACES,YAAY,iBACZC,aATS,SAACK,GACd,EAAKC,SAAS,CAACC,cAAeF,EAAEG,OAAOC,WAUrC,cAAC,EAAD,CAAUb,SAAUuB,W,GAjDVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f140a53.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css';\r\n\r\nfunction Card(props) {\r\n\r\n    const image = `https://robohash.org/${props.monster.id}?set=set2&180x180`;\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={image}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport \"./card-list.styles.css\"\r\n\r\nimport Card from '../card/card.component'; \r\n\r\nfunction CardList(props) {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => (\r\n               <Card key={monster.id} monster={monster}/>\r\n             ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search.styles.css';\r\n\r\nexport const Search = ({placeholder, handleChange}) => (\r\n    <div>\r\n        <input type=\"search\"  \r\n            className=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        /> \r\n    </div>\r\n)","import './App.css';\nimport React, { Component } from 'react';\nimport CardList from \"./components/card-list/card-list.component\";\nimport { Search } from \"./components/search/search.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchMonster: \"\"\n    }\n\n    this.searchTest = this.searchTest.bind(this);\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  searchTest(e) {\n    this.setState({searchMonster: e.target.value });\n  }\n\n  // its automatically binds\n  searchTestArrowFunction = (e) => {\n    this.setState({searchMonster: e.target.value });\n  }\n  render() {\n\n    //Filter monster. \n    // .filter\n    // destructuring does is pull the properties out of the object and set them to constant\n    const { monsters, searchMonster } = this.state;\n    const filteredMonsters = monsters\n      .filter(monster => monster.name\n        .toLowerCase()\n        .includes(searchMonster\n            .toLowerCase()));\n        \n    const search = (e) => {\n      this.setState({searchMonster: e.target.value });\n    }\n    \n    return (\n      <div className=\"App\">\n        <h1>Monster Roldex</h1>\n        <Search \n          placeholder=\"Search Monster\" \n          handleChange={search} \n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}